-- MySQL dump 10.13  Distrib 9.2.0, for macos15.2 (arm64)
--
-- Host: localhost    Database: ai_interview
-- ------------------------------------------------------
-- Server version	9.2.0

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `questions`
--

DROP TABLE IF EXISTS `questions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `questions` (
  `id` int NOT NULL AUTO_INCREMENT,
  `question_text` text NOT NULL,
  `summary` varchar(255) DEFAULT NULL,
  `example` text,
  `reservations` text,
  `leetcode_link` varchar(255) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `difficulty` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=137 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `questions`
--

LOCK TABLES `questions` WRITE;
/*!40000 ALTER TABLE `questions` DISABLE KEYS */;
INSERT INTO `questions` VALUES (1,'Given two linked lists representing non-negative integers in reverse order, add the two numbers and return the sum as a linked list.','Add two numbers as linked lists','Input: l1 = [2,4,3], l2 = [5,6,4]; Output: [7,0,8]. Input: l1 = [0], l2 = [0]; Output: [0]. Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]; Output: [8,9,9,9,0,0,0,1].','Each linked list has 1-100 nodes. Node values are in range [0, 9]. Lists do not contain leading zeros.','https://leetcode.com/problems/Add-Two-Numbers/','Add Two Numbers','Medium'),(2,'Design a class MedianFinder to add integers from a data stream and compute the median of all elements added so far.','Implement median computation class','{\'input\': [\'MedianFinder\', \'addNum\', \'addNum\', \'findMedian\', \'addNum\', \'findMedian\'], \'output\': [None, None, None, 1.5, None, 2.0], \'explanation\': [\'MedianFinder medianFinder = new MedianFinder();\', \'medianFinder.addNum(1);    // arr = [1]\', \'medianFinder.addNum(2);    // arr = [1, 2]\', \'medianFinder.findMedian(); // return 1.5 (i.e., (1 + 2) / 2)\', \'medianFinder.addNum(3);    // arr[1, 2, 3]\', \'medianFinder.findMedian(); // return 2.0\']}','{\'num_range\': \'-10^5 <= num <= 10^5\', \'data_structure_conditions\': \'At least one element must be present in the data structure before calling findMedian.\', \'method_calls_limit\': \'At most 5 * 10^4 calls will be made to addNum and findMedian.\'}','https://leetcode.com/problems/Find-Median-from-Data-Stream/','Find Median From Data Stream','Hard'),(3,'Given an integer array nums, find all unique triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, j != k, and nums[i] + nums[j] + nums[k] == 0.','Find unique zero-sum triplets','Input: nums = [-1,0,1,2,-1,-4]. Output: [[-1,-1,2],[-1,0,1]]. Input: nums = []. Output: []. Input: nums = [0]. Output: [].','0 <= nums.length <= 3000. -10^5 <= nums[i] <= 10^5. Solution set must not contain duplicate triplets.','https://leetcode.com/problems/3Sum/','3Sum','Medium'),(4,'Determine if a string containing \'()\', \'{}\', \'[]\' is valid based on correct pairing and order.','Check string for valid brackets','Input: s = \"()\" -> Output: true; Input: s = \"()[{}]\" -> Output: true; Input: s = \"(]\" -> Output: false','1 <= s.length <= 10^4; s contains only \'()\', \'{}\', \'[]\'.','https://leetcode.com/problems/Valid-Parentheses/','Valid Parentheses','Easy'),(5,'Determine if a string can be segmented into a sequence of dictionary words, allowing reuse of dictionary words.','Check string segmentation with dictionary','Input: s = \'leetcode\', wordDict = [\'leet\', \'code\']\nOutput: true\nExplanation: \'leetcode\' can be segmented as \'leet code\'.\n\nInput: s = \'applepenapple\', wordDict = [\'apple\', \'pen\']\nOutput: true\nExplanation: \'applepenapple\' can be segmented as \'apple pen apple\'.\n\nInput: s = \'catsandog\', wordDict = [\'cats\', \'dog\', \'sand\', \'and\', \'cat\']\nOutput: false','1 <= s.length <= 300\n1 <= wordDict.length <= 1000\n1 <= wordDict[i].length <= 20\nAll strings consist of lowercase English letters; wordDict strings are unique.','https://leetcode.com/problems/Word-Break/','Word Break','Medium'),(6,'Convert the given absolute Unix-style file system path to its simplified canonical form following the specified rules.','Simplify Unix-style file path','Input: path = \"/home/\"; Output: \"/home\"\nInput: path = \"/../\"; Output: \"/\"\nInput: path = \"/home//foo/\"; Output: \"/home/foo\"\nInput: path = \"/a/./b/../../c/\"; Output: \"/c\"','1 <= path.length <= 3000; path consists of English letters, digits, \'.\', \'/\', or \'_\'; path is a valid absolute Unix path.','https://leetcode.com/problems/Simplify-Path/','Simplify Path','Medium'),(7,'Given an array of integers \'nums\' and a non-negative integer \'k\', rotate the array to the right by \'k\' steps.','Rotate array to the right','Input: nums = [1,2,3,4,5,6,7], k = 3, Output: [5,6,7,1,2,3,4]. Input: nums = [-1,-100,3,99], k = 2, Output: [3,99,-1,-100]','1 <= nums.length <= 10^5, -2^31 <= nums[i] <= 2^31 - 1, 0 <= k <= 10^5','https://leetcode.com/problems/Rotate-Array/','Rotate Array','Medium'),(8,'Given the root of a binary tree, return the maximum path sum of any path where a path is defined as a sequence of connected nodes with each pair of adjacent nodes connected by an edge. Each node can appear in the path at most once, and the path does not need to pass through the root.','Find max path sum in tree','Input: root = [1,2,3] -> Output: 6 (Optimal path: 2 -> 1 -> 3)\nInput: root = [-10,9,20,null,null,15,7] -> Output: 42 (Optimal path: 15 -> 20 -> 7)','1 <= Number of nodes <= 30,000; Node values range from -1000 to 1000','https://leetcode.com/problems/Binary-Tree-Maximum-Path-Sum/','Binary Tree Maximum Path Sum','Hard'),(9,'Write a function to count the number of \'1\' bits in the binary representation of an unsigned integer.','Count \'1\' bits in integer','Input: n = 00000000000000000000000000001011, Output: 3; Input: n = 00000000000000000000000010000000, Output: 1; Input: n = 11111111111111111111111111111101, Output: 31','The input must be a binary string of length 32.','https://leetcode.com/problems/Number-of-1-Bits/','Number Of 1 Bits','Easy'),(10,'Given an integer array nums, find the contiguous subarray with the largest sum and return its sum.','Find largest sum subarray','Input: nums = [-2,1,-3,4,-1,2,1,-5,4], Output: 6. Explanation: [4,-1,2,1] has the largest sum = 6. Input: nums = [1], Output: 1. Input: nums = [5,4,-1,7,8], Output: 23.','1 <= nums.length <= 3 * 10^4, -10^5 <= nums[i] <= 10^5','https://leetcode.com/problems/Maximum-Subarray/','Maximum Subarray','Medium'),(11,'Determine if all courses can be completed given prerequisites as directed pairs of dependencies.','Check if all courses completable','Input: numCourses = 2, prerequisites = [[1,0]]; Output: true. Explanation: Course 1 depends on course 0, and it is completable.\nInput: numCourses = 2, prerequisites = [[1,0],[0,1]]; Output: false. Explanation: Courses 0 and 1 depend on each other, creating a cycle.','1 <= numCourses <= 10^5, 0 <= prerequisites.length <= 5000, prerequisites[i].length == 2, 0 <= ai, bi < numCourses. All prerequisite pairs are unique.','https://leetcode.com/problems/Course-Schedule/','Course Schedule','Medium'),(12,'Given a sorted, unique integer array \'nums\', return the smallest sorted list of ranges that cover all numbers exactly, formatted as \'a->b\' if a != b or \'a\' if a == b.','Generate smallest list of ranges','Input: nums = [0, 1, 2, 4, 5, 7]; Output: [\"0->2\", \"4->5\", \"7\"]\nInput: nums = [0, 2, 3, 4, 6, 8, 9]; Output: [\"0\", \"2->4\", \"6\", \"8->9\"]\nInput: nums = []; Output: []\nInput: nums = [-1]; Output: [\"-1\"]\nInput: nums = [0]; Output: [\"0\"]','0 <= nums.length <= 20; -2^31 <= nums[i] <= 2^31 - 1; All values in nums are unique and sorted in ascending order.','https://leetcode.com/problems/Summary-Ranges/','Summary Ranges','Easy'),(13,'Given a string s, return the longest palindromic substring in s.','Find longest palindromic substring','{\'input\': [\"s = \'babad\'\", \"s = \'cbbd\'\", \"s = \'a\'\", \"s = \'ac\'\"], \'output\': [\"\'bab\' or \'aba\'\", \"\'bb\'\", \"\'a\'\", \"\'a\'\"]}','1 <= s.length <= 1000. String s consists of only digits and English letters.','https://leetcode.com/problems/Longest-Palindromic-Substring/','Longest Palindromic Substring','Medium'),(14,'Given an m x n matrix with \'X\' and \'O\', flip all \'O\'s to \'X\'s in regions surrounded by \'X\' (not connected to the border).','Capture surrounded regions in matrix','Input: board = [[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"O\",\"O\",\"X\"],[\"X\",\"X\",\"O\",\"X\"],[\"X\",\"O\",\"X\",\"X\"]]\nOutput: [[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"O\",\"X\",\"X\"]]','1 <= m, n <= 200; board[i][j] is \'X\' or \'O\'; border-connected \'O\'s are not flipped.','https://leetcode.com/problems/Surrounded-Regions/','Surrounded Regions','Medium'),(15,'Write a function to find the longest common prefix string among an array of strings. Return an empty string if no common prefix exists.','Find longest common prefix','Input: strs = [\"flower\",\"flow\",\"flight\"] Output: \"fl\". Input: strs = [\"dog\",\"racecar\",\"car\"] Output: \"\".','1 <= strs.length <= 200, 0 <= strs[i].length <= 200, strs[i] consists of only lower-case English letters.','https://leetcode.com/problems/Longest-Common-Prefix/','Longest Common Prefix','Easy'),(16,'Determine if starting at the first index, you can reach the last index given each array element indicates maximum jump length at that position.','Check array jump reachability','Input: nums = [2,3,1,1,4], Output: true; Input: nums = [3,2,1,0,4], Output: false','1 <= nums.length <= 10^4, 0 <= nums[i] <= 10^5','https://leetcode.com/problems/Jump-Game/','Jump Game','Medium'),(17,'Given initial capital, pick at most k projects with profits and capital requirements to maximize final capital.','Maximize capital with project selection','Input: k = 2, w = 0, profits = [1,2,3], capital = [0,1,1]. Output: 4. Explanation: Start with project 0, earn profit 1, move to project 2, earn profit 3, final capital = 4.','1 <= k <= 10^5, 0 <= w <= 10^9, 1 <= n <= 10^5, 0 <= profits[i] <= 10^4, 0 <= capital[i] <= 10^9, n == profits.length == capital.length.','https://leetcode.com/problems/IPO/','Ipo','Hard'),(18,'Construct a deep copy of a linked list where each node has a random pointer, ensuring pointers in the copied list represent the same state as the original without referring to original nodes.','Deep copy linked list problem','Input: head = [[7,null],[13,0],[11,4],[10,2],[1,0]] Output: [[7,null],[13,0],[11,4],[10,2],[1,0]]; Input: head = [[1,1],[2,1]] Output: [[1,1],[2,1]]; Input: head = [[3,null],[3,0],[3,null]] Output: [[3,null],[3,0],[3,null]]; Input: head = [] Output: []','0 <= n <= 1000; -10000 <= Node.val <= 10000; Node.random can be null or point to any node in the list.','https://leetcode.com/problems/Copy-List-with-Random-Pointer/','Copy List With Random Pointer','Medium'),(19,'Given an array of points on the X-Y plane, determine the maximum number of points that lie on the same straight line.','Find max points on same line','Input: points = [[1,1],[2,2],[3,3]]; Output: 3. Input: points = [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]; Output: 4.','1 <= points.length <= 300, points[i].length == 2, -10^4 <= xi, yi <= 10^4, all points are unique.','https://leetcode.com/problems/Max-Points-on-a-Line/','Max Points On A Line','Hard'),(20,'Merge two sorted linked lists into a single sorted linked list by splicing their nodes.','Merge two sorted linked lists','Example 1: Input: l1 = [1,2,4], l2 = [1,3,4] Output: [1,1,2,3,4,4]; Example 2: Input: l1 = [], l2 = [] Output: []; Example 3: Input: l1 = [], l2 = [0] Output: [0]','The number of nodes in both lists is in the range [0, 50]. Values in the lists satisfy -100 <= Node.val <= 100. Both lists are sorted in non-decreasing order.','https://leetcode.com/problems/Merge-Two-Sorted-Lists/','Merge Two Sorted Lists','Easy'),(21,'Given an array of intervals, merge all overlapping intervals and return an array of the non-overlapping intervals.','Merge overlapping intervals','Input: intervals = [[1,3],[2,6],[8,10],[15,18]] Output: [[1,6],[8,10],[15,18]]; Input: intervals = [[1,4],[4,5]] Output: [[1,5]]','1 <= intervals.length <= 10^4; intervals[i].length == 2; 0 <= start_i <= end_i <= 10^4','https://leetcode.com/problems/Merge-Intervals/','Merge Intervals','Medium'),(22,'Determine if a given binary tree is a valid binary search tree (BST) according to defined rules.','Validate binary search tree','Input: root = [2,1,3], Output: true; Input: root = [5,1,4,null,null,3,6], Output: false','Number of nodes in the tree is in range [1, 10^4]. Node values are in range [-2^31, 2^31 - 1].','https://leetcode.com/problems/Validate-Binary-Search-Tree/','Validate Binary Search Tree','Medium'),(23,'Given the root of a binary search tree and an integer k, return the kth (1-indexed) smallest element in the tree.','Find kth smallest in BST','Input: root = [3,1,4,null,2], k = 1; Output: 1. Input: root = [5,3,6,2,4,null,null,1], k = 3; Output: 3.','1 <= k <= n <= 10^4, 0 <= Node.val <= 10^4. Number of nodes in the tree is n.','https://leetcode.com/problems/Kth-Smallest-Element-in-a-BST/','Kth Smallest Element In A Bst','Medium'),(24,'Given an n x n matrix of 0\'s and 1\'s, construct a Quad-Tree representing the matrix as per the rules of Quad-Tree: if all values in a sub-grid are same, create a leaf node; otherwise, recursively divide the grid into four sub-grids.','Construct Quad-Tree from matrix','Input: grid = [[0,1],[1,0]]; Output: [[0,1],[1,0],[1,1],[1,1],[1,0]]; Explanation: Quad-Tree is constructed by recursively dividing the grid and storing values in nodes.','n == grid.length == grid[i].length; n == 2^x where 0 <= x <= 6','https://leetcode.com/problems/Construct-Quad-Tree/','Construct Quad Tree','Medium'),(25,'Given a 2D binary grid where \'1\' represents land and \'0\' represents water, return the number of islands in the grid. An island is surrounded by water and formed by connecting adjacent lands horizontally or vertically. Assume the grid edges are surrounded by water.','Count islands in binary grid','Example 1: Input: grid = [[\'1\',\'1\',\'1\',\'1\',\'0\'], [\'1\',\'1\',\'0\',\'1\',\'0\'], [\'1\',\'1\',\'0\',\'0\',\'0\'], [\'0\',\'0\',\'0\',\'0\',\'0\']] Output: 1 Example 2: Input: grid = [[\'1\',\'1\',\'0\',\'0\',\'0\'], [\'1\',\'1\',\'0\',\'0\',\'0\'], [\'0\',\'0\',\'1\',\'0\',\'0\'], [\'0\',\'0\',\'0\',\'1\',\'1\']] Output: 3','1 <= m, n <= 300; grid[i][j] is either \'0\' or \'1\'','https://leetcode.com/problems/Number-of-Islands/','Number Of Islands','Medium'),(26,'Given an array of integers citations, where citations[i] represents the number of citations for the i-th paper, calculate the h-index based on the definition which states that h is the maximum number such that h papers have at least h citations each, and the remaining papers have no more than h citations.','Calculate researcher\'s h-index','Input: citations = [3,0,6,1,5]\nOutput: 3\nExplanation: The researcher has 3 papers with at least 3 citations each, and the remaining two papers have no more than 3 citations each.\nInput: citations = [1,3,1]\nOutput: 1','n == citations.length, 1 <= n <= 5000, 0 <= citations[i] <= 1000','https://leetcode.com/problems/H-Index/','H-Index','Medium'),(27,'Determine the minimum number of mutations required to transform a gene string \'start\' into \'end\', given that valid mutations must exist in the gene bank.','Find minimum gene mutations','Example 1: start = \"AACCGGTT\", end = \"AACCGGTA\", bank = [\"AACCGGTA\"]. Output: 1. Example 2: start = \"AACCGGTT\", end = \"AAACGGTA\", bank = [\"AACCGGTA\",\"AACCGCTA\",\"AAACGGTA\"]. Output: 2. Example 3: start = \"AAAAACCC\", end = \"AACCCCCC\", bank = [\"AAAACCCC\",\"AAACCCCC\",\"AACCCCCC\"]. Output: 3.','start.length == 8, end.length == 8, 0 <= bank.length <= 10, bank[i].length == 8, all strings consist of [\'A\', \'C\', \'G\', \'T\']','https://leetcode.com/problems/Minimum-Genetic-Mutation/','Minimum Genetic Mutation','Medium'),(28,'Given an m x n grid \'board\' of characters and a string \'word\', determine if the \'word\' can be formed by sequentially adjacent characters in the grid (horizontally or vertically). Each letter cell can be used only once.','Check word existence in grid','Input: board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCCED\"; Output: true. Input: board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"SEE\"; Output: true. Input: board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCB\"; Output: false.','1 <= m, n <= 6; 1 <= word.length <= 15; \'board\' and \'word\' consist of only lowercase and uppercase English letters.','https://leetcode.com/problems/Word-Search/','Word Search','Medium'),(29,'Given a Roman numeral string, convert it to its integer equivalent.','Convert Roman numeral to integer','Input: s = \'III\' Output: 3; Input: s = \'IV\' Output: 4; Input: s = \'IX\' Output: 9; Input: s = \'LVIII\' Output: 58 (L=50, V=5, III=3); Input: s = \'MCMXCIV\' Output: 1994 (M=1000, CM=900, XC=90, IV=4)','1 <= s.length <= 15; s contains only the characters (\'I\', \'V\', \'X\', \'L\', \'C\', \'D\', \'M\'); s is guaranteed to be a valid Roman numeral in the range [1, 3999].','https://leetcode.com/problems/Roman-to-Integer/','Roman To Integer','Easy'),(30,'Partition a linked list such that all nodes with values less than x appear before nodes with values greater than or equal to x, while preserving their original relative order.','Partition linked list by value','Input: head = [1,4,3,2,5,2], x = 3\nOutput: [1,2,2,4,3,5]\nInput: head = [2,1], x = 2\nOutput: [1,2]','The number of nodes in the list is in the range [0, 200]. Node values are in the range -100 to 100. x is in the range -200 to 200.','https://leetcode.com/problems/Partition-List/','Partition List','Medium'),(31,'Given an array of integers nums and a target integer, return indices of two numbers from nums such that they add up to the target. Each input has exactly one solution, and elements cannot be reused. Return indices in any order.','Find indices adding to target','Example 1: Input: nums = [2,7,11,15], target = 9. Output: [0,1]. Because nums[0] + nums[1] == 9, we return [0, 1]. Example 2: Input: nums = [3,2,4], target = 6. Output: [1,2]. Example 3: Input: nums = [3,3], target = 6. Output: [0,1].','2 <= nums.length <= 10^4, -10^9 <= nums[i] <= 10^9, -10^9 <= target <= 10^9, only one valid solution exists.','https://leetcode.com/problems/Two-Sum/','Two Sum','Easy'),(32,'Create a deep copy of a connected undirected graph represented as an adjacency list, given a reference to the first node.','Deep copy of a graph','Input: adjList = [[2,4],[1,3],[2,4],[1,3]]\nOutput: [[2,4],[1,3],[2,4],[1,3]]\nInput: adjList = [[]]\nOutput: [[]]\nInput: adjList = []\nOutput: []\nInput: adjList = [[2],[1]]\nOutput: [[2],[1]]','Number of nodes in the graph is between 0 and 100. Node.val is unique and between 1 and 100. No repeated edges or self-loops. Graph is connected and all nodes are accessible from the starting node.','https://leetcode.com/problems/Clone-Graph/','Clone Graph','Medium'),(33,'Given a sorted array of distinct integers and a target value, return the index of the target if found or where it should be inserted while maintaining order. Ensure the algorithm runs in O(log n) time.','Find or insert target index','Input: nums = [1,3,5,6], target = 5; Output: 2\nInput: nums = [1,3,5,6], target = 2; Output: 1\nInput: nums = [1,3,5,6], target = 7; Output: 4\nInput: nums = [1,3,5,6], target = 0; Output: 0\nInput: nums = [1], target = 0; Output: 0','1 <= nums.length <= 10^4; -10^4 <= nums[i], target <= 10^4; nums contains distinct values sorted in ascending order.','https://leetcode.com/problems/Search-Insert-Position/','Search Insert Position','Easy'),(34,'How many unique paths are there from the top-left to the bottom-right corner of an m x n grid, considering obstacles represented as 1?','Count unique paths in grid','Input: obstacleGrid = [[0,0,0],[0,1,0],[0,0,0]] Output: 2; Input: obstacleGrid = [[0,1],[0,0]] Output: 1','1 <= m, n <= 100; obstacleGrid[i][j] is either 0 or 1','https://leetcode.com/problems/Unique-Paths-II/','Unique Paths Ii','Medium'),(35,'Given two sorted arrays nums1 and nums2 of sizes m and n, find the median of the two sorted arrays with an overall runtime complexity of O(log(m+n)).','Find median of two arrays','Example 1:\nInput: nums1 = [1,3], nums2 = [2]\nOutput: 2.00000\nExplanation: merged array = [1,2,3] and median is 2.\n\nExample 2:\nInput: nums1 = [1,2], nums2 = [3,4]\nOutput: 2.50000\nExplanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.\n\nExample 3:\nInput: nums1 = [0,0], nums2 = [0,0]\nOutput: 0.00000\n\nExample 4:\nInput: nums1 = [], nums2 = [1]\nOutput: 1.00000\n\nExample 5:\nInput: nums1 = [2], nums2 = []\nOutput: 2.00000','nums1.length == m, nums2.length == n, 0 <= m <= 1000, 0 <= n <= 1000, 1 <= m + n <= 2000, -10^6 <= nums1[i], nums2[i] <= 10^6','https://leetcode.com/problems/Median-of-Two-Sorted-Arrays/','Median Of Two Sorted Arrays','Hard'),(36,'Determine the lowest common ancestor of two given nodes in a binary tree, where the ancestor is the lowest node that has both nodes as descendants (possibly including itself).','Find LCA of two nodes','Input: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1; Output: 3. Input: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4; Output: 5.','The number of nodes in the tree ranges from 2 to 10^5. Node values are unique and in the range [-10^9, 10^9]. Both \'p\' and \'q\' exist in the tree, and p != q.','https://leetcode.com/problems/Lowest-Common-Ancestor-of-a-Binary-Tree/','Lowest Common Ancestor Of A Binary Tree','Medium'),(37,'Find the minimum number of candies required to distribute among children such that each child has at least one candy and children with higher ratings get more candies than their neighbors.','Distribute candies based on ratings','Input: ratings = [1,0,2]\nOutput: 5\nExplanation: Allocate candies as [2,1,2].\nInput: ratings = [1,2,2]\nOutput: 4\nExplanation: Allocate candies as [1,2,1].','1 <= n == ratings.length <= 2 * 10^4; 0 <= ratings[i] <= 2 * 10^4','https://leetcode.com/problems/Candy/','Candy','Hard'),(38,'Modify the input sorted array in-place to ensure each unique element appears at most twice, while maintaining the relative order, and return the new length of the modified array.','Remove duplicates in sorted array','Input: nums = [1,1,1,2,2,3]\nOutput: k = 5, nums = [1,1,2,2,3,_]\n\nInput: nums = [0,0,1,1,1,1,2,3,3]\nOutput: k = 7, nums = [0,0,1,1,2,3,3,_,_]','1 <= nums.length <= 30000, -10^4 <= nums[i] <= 10^4, nums is sorted in non-decreasing order, and solution must use O(1) extra memory.','https://leetcode.com/problems/Remove-Duplicates-from-Sorted-Array-II/','Remove Duplicates From Sorted Array Ii','Medium'),(39,'Given the root of a binary tree, return the zigzag level order traversal of its nodes\' values, alternating directions at each level.','Zigzag traversal of binary tree','Input: root = [3,9,20,null,null,15,7] Output: [[3],[20,9],[15,7]]; Input: root = [1] Output: [[1]]; Input: root = [] Output: []','The number of nodes in the tree is in the range [0, 2000]. Node values are in range [-100, 100].','https://leetcode.com/problems/Binary-Tree-Zigzag-Level-Order-Traversal/','Binary Tree Zigzag Level Order Traversal','Medium'),(40,'Given two strings s and t, return the smallest substring in s that contains all characters of t, including duplicates. If no such substring exists, return an empty string.','Find minimum window substring','Example 1: Input: s = \"ADOBECODEBANC\", t = \"ABC\", Output: \"BANC\". Example 2: Input: s = \"a\", t = \"a\", Output: \"a\". Example 3: Input: s = \"a\", t = \"aa\", Output: \"\".','1 <= s.length, t.length <= 10^5. s and t consist of uppercase and lowercase English letters.','https://leetcode.com/problems/Minimum-Window-Substring/','Minimum Window Substring','Hard'),(41,'Find the maximum profit possible from an array of stock prices, allowing at most two transactions, and ensuring one transaction completes before starting another.','Max profit with two transactions','Input: prices = [3,3,5,0,0,3,1,4]; Output: 6. Explanation: Buy on day 4 (price=0), sell on day 6 (price=3), profit=3-0=3. Then buy on day 7 (price=1) and sell on day 8 (price=4), profit=4-1=3.','1 <= prices.length <= 10^5; 0 <= prices[i] <= 10^5','https://leetcode.com/problems/Best-Time-to-Buy-and-Sell-Stock-III/','Best Time To Buy And Sell Stock Iii','Hard'),(42,'Given a sorted array of integers, find the starting and ending positions of a target value. Return [-1, -1] if the target is not present. Ensure the solution runs in O(log n) time complexity.','Find range of target value','Input: nums = [5,7,7,8,8,10], target = 8; Output: [3,4]. Input: nums = [5,7,7,8,8,10], target = 6; Output: [-1,-1]. Input: nums = [], target = 0; Output: [-1,-1].','0 <= nums.length <= 105. -109 <= nums[i] <= 109. Array is sorted in non-decreasing order. -109 <= target <= 109.','https://leetcode.com/problems/Find-First-and-Last-Position-of-Element-in-Sorted-Array/','Find First And Last Position Of Element In Sorted Array','Medium'),(43,'Given a circular integer array nums of length n, return the maximum possible sum of a non-empty subarray. A circular array means the end connects to the beginning, and subarrays may only include each element at most once.','Find max sum of circular subarray','Input: nums = [1,-2,3,-2]; Output: 3\nInput: nums = [5,-3,5]; Output: 10\nInput: nums = [3,-1,2,-1]; Output: 4\nInput: nums = [3,-2,2,-3]; Output: 3\nInput: nums = [-2,-3,-1]; Output: -1','1 <= nums.length <= 3 * 10^4\n-3 * 10^4 <= nums[i] <= 3 * 10^4','https://leetcode.com/problems/Maximum-Sum-Circular-Subarray/','Maximum Sum Circular Subarray','Medium'),(44,'Design a class called WordDictionary that supports adding words and searching for matches where the search string may contain \'.\' as a wildcard.','Manage words and perform search','Input: [\"WordDictionary\",\"addWord\",\"addWord\",\"addWord\",\"search\",\"search\",\"search\",\"search\"] [[],[\"bad\"],[\"dad\"],[\"mad\"],[\"pad\"],[\"bad\"],[\".ad\"],[\"b..\"]] Output: [null,null,null,null,false,true,true,true]','1 <= word.length <= 500; addWord words consist of lowercase English letters; search words consist of \'.\' or lowercase English letters; no more than 50000 calls to addWord and search combined.','https://leetcode.com/problems/Design-Add-and-Search-Words-Data-Structure/','Design Add And Search Words Data Structure','Medium'),(45,'Find the single element in an integer array where every other element appears three times. Ensure linear runtime complexity and constant extra space usage.','Find unique element in array','Input: nums = [2,2,3,2]\nOutput: 3\nInput: nums = [0,1,0,1,0,1,99]\nOutput: 99','1 <= nums.length <= 3 * 10^4, -2^31 <= nums[i] <= 2^31 - 1, All elements appear exactly three times except one that appears once.','https://leetcode.com/problems/Single-Number-II/','Single Number Ii','Medium'),(46,'Return the minimum absolute difference between the values of any two different nodes in a Binary Search Tree (BST).','Find minimum difference in BST','Input: root = [4,2,6,1,3]; Output: 1. Input: root = [1,0,48,null,null,12,49]; Output: 1.','The number of nodes in the tree is in the range [2, 10^4]. 0 <= Node.val <= 10^5.','https://leetcode.com/problems/Minimum-Absolute-Difference-in-BST/','Minimum Absolute Difference In Bst','Easy'),(47,'Reverse nodes in a singly linked list between positions left and right and return the modified list.','Reverse segment in linked list','Input: head = [1,2,3,4,5], left = 2, right = 4; Output: [1,4,3,2,5]\nInput: head = [5], left = 1, right = 1; Output: [5]','1 <= n <= 500, -500 <= Node.val <= 500, 1 <= left <= right <= n','https://leetcode.com/problems/Reverse-Linked-List-II/','Reverse Linked List Ii','Medium'),(48,'Given a string with words separated by spaces, reverse the order of the words, removing additional spaces between, leading, or trailing spaces.','Reverse words in a string','Input: s = \'the sky is blue\' Output: \'blue is sky the\'\nInput: s = \'  hello world  \' Output: \'world hello\'\nInput: s = \'a good   example\' Output: \'example good a\'\nInput: s = \'  Bob    Loves  Alice   \' Output: \'Alice Loves Bob\'\nInput: s = \'Alice does not even like bob\' Output: \'bob like even not does Alice\'','1 <= s.length <= 10^4, s contains English letters (upper-case and lower-case), digits, and spaces. There is at least one word in s.','https://leetcode.com/problems/Reverse-Words-in-a-String/','Reverse Words In A String','Medium'),(49,'Determine the minimum number of jumps needed to reach the last index of an array, where each element represents the maximum jump length from that position.','Find minimum jumps to target','Input: nums = [2,3,1,1,4] Output: 2; Input: nums = [2,3,0,1,4] Output: 2','1 <= nums.length <= 10^4, 0 <= nums[i] <= 1000','https://leetcode.com/problems/Jump-Game-II/','Jump Game Ii','Medium'),(50,'Write a function to determine if two binary trees are structurally identical and their nodes have the same values.','Check if two trees are identical','Example 1: Input: p = [1,2,3], q = [1,2,3] Output: true. Example 2: Input: p = [1,2], q = [1,null,2] Output: false. Example 3: Input: p = [1,2,1], q = [1,1,2] Output: false.','Number of nodes in both trees is in the range [0, 100]. Node values are between -10^4 and 10^4.','https://leetcode.com/problems/Same-Tree/','Same Tree','Easy'),(51,'Given a sorted integer array `nums`, remove duplicates in-place such that each unique element appears only once, and the first `k` slots hold these elements. Return `k` and modify the array using O(1) extra memory.','Remove duplicates in-place from array','Input: nums = [1,1,2]\nOutput: k=2, nums=[1,2,_]\n\nInput: nums = [0,0,1,1,1,2,2,3,3,4]\nOutput: k=5, nums=[0,1,2,3,4,_,_,_,_,_]','0 <= nums.length <= 3 * 10^4\n-100 <= nums[i] <= 100\nArray `nums` is sorted in non-decreasing order.','https://leetcode.com/problems/Remove-Duplicates-from-Sorted-Array/','Remove Duplicates From Sorted Array','Easy'),(52,'Given an integer array nums and an integer val, modify nums in-place to remove all occurrences of val and return the count of remaining elements. Ensure the first part of nums contains the final result, and use O(1) extra memory.','Remove occurrences of a value','Example 1: Input: nums = [3,2,2,3], val = 3; Output: k = 2, nums = [2,2,_,_]. Example 2: Input: nums = [0,1,2,2,3,0,4,2], val = 2; Output: k = 5, nums = [0,1,4,0,3,_,_,_].','0 <= nums.length <= 100; 0 <= nums[i] <= 50; 0 <= val <= 100','https://leetcode.com/problems/Remove-Element/','Remove Element','Easy'),(53,'Determine the element that appears more than ⌊n / 2⌋ times in an array of size n, assuming it always exists.','Find majority element in array','Input: nums = [3,2,3], Output: 3; Input: nums = [2,2,1,1,1,2,2], Output: 2','1 <= n <= 50000; -2^31 <= nums[i] <= 2^31 - 1; n == nums.length','https://leetcode.com/problems/Majority-Element/','Majority Element','Easy'),(54,'Implement a stack class supporting push, pop, top, and getMin operations in constant time.','Design a stack with min retrieval','Input: [\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"], [[],[-2],[0],[-3],[],[],[],[]] Output: [null,null,null,null,-3,null,0,-2]','-2^31 <= val <= 2^31 - 1. Methods pop, top, and getMin will always be called on non-empty stacks. A maximum of 30,000 calls will be made to methods.','https://leetcode.com/problems/Min-Stack/','Min Stack','Medium'),(55,'Given an array of integers representing money in houses, find the maximum money that can be robbed without robbing adjacent houses.','Find max money without alert','Input: nums = [1,2,3,1]; Output: 4; Explanation: Rob house 1 (money = 1) and then house 3 (money = 3). Total = 4. Input: nums = [2,7,9,3,1]; Output: 12; Explanation: Rob house 1 (money = 2), house 3 (money = 9), and house 5 (money = 1). Total = 12.','1 <= nums.length <= 100; 0 <= nums[i] <= 400','https://leetcode.com/problems/House-Robber/','House Robber','Medium'),(56,'Given a non-negative integer x, compute and return the integer part of its square root without using built-in exponent functions or operators.','Compute square root without decimals','Input: x = 4, Output: 2; Input: x = 8, Output: 2 (since 2.82842... is truncated)','0 <= x <= 2^31 - 1; no built-in exponent functions like pow or x ** 0.5 allowed','https://leetcode.com/problems/Sqrt(x)/','Sqrt(X)','Easy'),(57,'Merge nums1 and nums2 into a single sorted array directly in nums1, given nums1 has extra space to accommodate the merge.','Merge two sorted arrays','Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3; Output: [1,2,2,3,5,6].','nums1.length == m + n; nums2.length == n; 0 <= m, n <= 200; 1 <= m + n <= 200; -10^9 <= nums1[i], nums2[j] <= 10^9.','https://leetcode.com/problems/Merge-Sorted-Array/','Merge Sorted Array','Easy'),(58,'Given the root of a binary tree, return the values of the nodes visible from the right side, ordered from top to bottom.','Right side view of tree','Input: root = [1,2,3,null,5,null,4] Output: [1,3,4]. Input: root = [1,null,3] Output: [1,3]. Input: root = [] Output: []','The number of nodes in the tree is in the range [0, 100]. Node values are between -100 and 100.','https://leetcode.com/problems/Binary-Tree-Right-Side-View/','Binary Tree Right Side View','Medium'),(59,'Find the length of the longest strictly increasing subsequence in an integer array.','Longest increasing subsequence length','Input: nums = [10,9,2,5,3,7,101,18], Output: 4; Input: nums = [0,1,0,3,2,3], Output: 4; Input: nums = [7,7,7,7,7,7,7], Output: 1','1 <= nums.length <= 2500, -10^4 <= nums[i] <= 10^4','https://leetcode.com/problems/Longest-Increasing-Subsequence/','Longest Increasing Subsequence','Medium'),(60,'Given a linked list, reverse its nodes in groups of k at a time while leaving remaining nodes intact. Only nodes may be rearranged, not their values.','Reverse linked list in k groups','Input: head = [1,2,3,4,5], k = 2; Output: [2,1,4,3,5]. Input: head = [1,2,3,4,5], k = 3; Output: [3,2,1,4,5]. Input: head = [1,2,3,4,5], k = 1; Output: [1,2,3,4,5]. Input: head = [1], k = 1; Output: [1].','1 <= sz <= 5000, 0 <= Node.val <= 1000, 1 <= k <= sz, Only O(1) memory for follow-up solution.','https://leetcode.com/problems/Reverse-Nodes-in-k-Group/','Reverse Nodes In K-Group','Hard'),(61,'Format an array of strings such that each line has exactly maxWidth characters with left-right justification where extra spaces are evenly distributed, except for the last line which should be left-justified.','Text justification problem','Input: words = [\"This\", \"is\", \"an\", \"example\", \"of\", \"text\", \"justification.\"], maxWidth = 16; Output: [\"This    is    an\", \"example  of text\", \"justification.  \"]; Input: words = [\"Science\",\"is\",\"what\",\"we\",\"understand\",\"well\",\"enough\",\"to\",\"explain\",\"to\",\"a\",\"computer.\",\"Art\",\"is\",\"everything\",\"else\",\"we\",\"do\"], maxWidth = 20; Output: [\"Science  is  what we\", \"understand      well\", \"enough to explain to\", \"a  computer.  Art is\", \"everything  else  we\", \"do                  \"]','1 <= words.length <= 300; 1 <= words[i].length <= 20; words[i] consists of only English letters and symbols; 1 <= maxWidth <= 100; words[i].length <= maxWidth','https://leetcode.com/problems/Text-Justification/','Text Justification','Hard'),(62,'Compute the bitwise AND of all integers in the range [left, right] inclusive.','Bitwise AND for integer range','Example 1: Input: left = 5, right = 7 Output: 4; Example 2: Input: left = 0, right = 0 Output: 0; Example 3: Input: left = 1, right = 2147483647 Output: 0','0 <= left <= right <= 2^31 - 1','https://leetcode.com/problems/Bitwise-AND-of-Numbers-Range/','Bitwise And Of Numbers Range','Medium'),(63,'Given an integer n, return the number of trailing zeroes in n!.','Count trailing zeroes in factorial','Input: n = 3, Output: 0 (Explanation: 3! = 6, no trailing zero)\nInput: n = 5, Output: 1 (Explanation: 5! = 120, one trailing zero)\nInput: n = 0, Output: 0','0 <= n <= 10^4','https://leetcode.com/problems/Factorial-Trailing-Zeroes/','Factorial Trailing Zeroes','Medium'),(64,'Given the root of a binary tree, return an array of the average value of nodes at each level. Answers within 10^-5 of the actual average are acceptable.','Find average values per tree level','Input: root = [3,9,20,null,15,7] Output: [3.00000,14.50000,11.00000] Explanation: Level 0 average is 3, level 1 average is 14.5, and level 2 average is 11.','The number of nodes in the tree is in the range [1, 10^4]. Node values are between -2^31 and 2^31 - 1.','https://leetcode.com/problems/Average-of-Levels-in-Binary-Tree/','Average Of Levels In Binary Tree','Easy'),(65,'Given an unsorted array of integers, return the length of the longest consecutive elements sequence. Implement the solution in O(n) time complexity.','Find longest consecutive sequence length','Input: nums = [100,4,200,1,3,2]; Output: 4 (Explanation: Longest sequence is [1, 2, 3, 4])\nInput: nums = [0,3,7,2,5,8,4,6,0,1]; Output: 9 (Explanation: Longest sequence is [0, 1, 2, 3, 4, 5, 6, 7, 8])','0 <= nums.length <= 10^5; -10^9 <= nums[i] <= 10^9','https://leetcode.com/problems/Longest-Consecutive-Sequence/','Longest Consecutive Sequence','Medium'),(66,'Find the order of courses to complete all courses given a list of prerequisites, or return an empty array if impossible.','Determine course completion order','Input: numCourses = 2, prerequisites = [[1,0]]; Output: [0,1]. Input: numCourses = 4, prerequisites = [[1,0],[2,0],[3,1],[3,2]]; Output: [0,2,1,3]. Input: numCourses = 1, prerequisites = []; Output: [0].','1 <= numCourses <= 2000, 0 <= prerequisites.length <= numCourses * (numCourses - 1), prerequisites[i].length == 2, 0 <= ai, bi < numCourses, ai != bi, all pairs [ai, bi] are distinct.','https://leetcode.com/problems/Course-Schedule-II/','Course Schedule Ii','Medium'),(67,'Merge k sorted linked lists into one sorted linked list.','Merge sorted linked lists','Input: [[1,4,5],[1,3,4],[2,6]]; Output: [1,1,2,3,4,4,5,6]\nInput: []; Output: []\nInput: [[]]; Output: []','0 <= k <= 10^4, 0 <= lists[i].length <= 500, -10^4 <= lists[i][j] <= 10^4, lists[i] is sorted, sum of lists[i].length <= 10^4','https://leetcode.com/problems/Merge-k-Sorted-Lists/','Merge K Sorted Lists','Hard'),(68,'Determine if a binary tree is symmetric around its center based on its root node.','Check if tree is symmetric','Input: root = [1,2,2,3,4,4,3], Output: true; Input: root = [1,2,2,null,3,null,3], Output: false','The number of nodes in the tree is in the range [1, 1000]. Node values range from -100 to 100.','https://leetcode.com/problems/Symmetric-Tree/','Symmetric Tree','Easy'),(69,'Given a binary tree of digits, calculate the total sum of numbers represented by all root-to-leaf paths.','Sum of root-to-leaf numbers','Input: root = [1,2,3]\nOutput: 25\nExplanation: Paths are 12 and 13, so sum = 12 + 13 = 25.\n\nInput: root = [4,9,0,5,1]\nOutput: 1026\nExplanation: Paths are 495, 491, and 40, so sum = 495 + 491 + 40 = 1026.','1 <= Number of nodes <= 1000\n0 <= Node.val <= 9\nTree depth <= 10','https://leetcode.com/problems/Sum-Root-to-Leaf-Numbers/','Sum Root To Leaf Numbers','Medium'),(70,'Given two sorted integer arrays nums1 and nums2, and an integer k, return the k pairs (u, v) with the smallest sums, where u is from nums1 and v is from nums2.','Find k pairs with smallest sums','Input: nums1 = [1,7,11], nums2 = [2,4,6], k = 3; Output: [[1,2],[1,4],[1,6]]\nInput: nums1 = [1,1,2], nums2 = [1,2,3], k = 2; Output: [[1,1],[1,1]]\nInput: nums1 = [1,2], nums2 = [3], k = 3; Output: [[1,3],[2,3]]','1 <= nums1.length, nums2.length <= 10^5; -10^9 <= nums1[i], nums2[i] <= 10^9; nums1 and nums2 are sorted in ascending order; 1 <= k <= 1000','https://leetcode.com/problems/Find-K-Pairs-with-Smallest-Sums/','Find K Pairs With Smallest Sums','Medium'),(71,'Determine whether a given integer x reads the same backward as forward.','Check if integer is palindrome','Input: x = 121, Output: true; Input: x = -121, Output: false; Input: x = 10, Output: false','-2^31 <= x <= 2^31 - 1','https://leetcode.com/problems/Palindrome-Number/','Palindrome Number','Easy'),(72,'Given a string containing words separated by spaces, return the length of the last word. A word is defined as a maximal substring consisting of non-space characters.','Find last word\'s length','Input: s = \'Hello World\' -> Output: 5; Input: s = \'   fly me   to   the moon  \' -> Output: 4; Input: s = \'luffy is still joyboy\' -> Output: 6','1 <= s.length <= 104, s consists of only English letters and spaces, and there will be at least one word.','https://leetcode.com/problems/Length-of-Last-Word/','Length Of Last Word','Easy'),(73,'Determine the length of the longest substring without repeating characters in a given string.','Find longest substring length','Input: s = \'abcabcbb\' | Output: 3; Input: s = \'bbbbb\' | Output: 1; Input: s = \'pwwkew\' | Output: 3; Input: s = \'\' | Output: 0','0 <= s.length <= 5 * 10^4; s consists of English letters, digits, symbols, and spaces.','https://leetcode.com/problems/Longest-Substring-Without-Repeating-Characters/','Longest Substring Without Repeating Characters','Medium'),(74,'Given a board of characters and a list of words, find all words that can be formed by sequentially adjacent cells on the board.','Find words on a board','Input: board = [[\"o\",\"a\",\"a\",\"n\"],[\"e\",\"t\",\"a\",\"e\"],[\"i\",\"h\",\"k\",\"r\"],[\"i\",\"f\",\"l\",\"v\"]], words = [\"oath\",\"pea\",\"eat\",\"rain\"] | Output: [\"eat\",\"oath\"]; Input: board = [[\"a\",\"b\"],[\"c\",\"d\"]], words = [\"abcb\"] | Output: []','1 <= m, n <= 12; board[i][j] is a lowercase English letter; 1 <= words.length <= 3 * 10^4; 1 <= words[i].length <= 10; All strings in words are unique.','https://leetcode.com/problems/Word-Search-II/','Word Search Ii','Hard'),(75,'Given an array of stock prices and an integer k, calculate the maximum profit achievable with at most k transactions, adhering to the restriction of selling before buying again.','Find max profit with k transactions','Input: k = 2, prices = [2,4,1]; Output: 2. Explanation: Buy on day 1 (price = 2) and sell on day 2 (price = 4), profit = 4-2 = 2. Input: k = 2, prices = [3,2,6,5,0,3]; Output: 7. Explanation: Buy on day 2 (price = 2) and sell on day 3 (price = 6), profit = 6-2 = 4. Then buy on day 5 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.','0 <= k <= 100; 0 <= prices.length <= 1000; 0 <= prices[i] <= 1000','https://leetcode.com/problems/Best-Time-to-Buy-and-Sell-Stock-IV/','Best Time To Buy And Sell Stock Iv','Hard'),(76,'Given a binary tree, populate each node\'s \'next\' pointer to point to its next right node, or set it to NULL if no next right node exists.','Populate next pointers in tree','Input: root = [1,2,3,4,5,null,7]\nOutput: [1,#,2,3,#,4,5,7,#]\nExplanation: \'#\' indicates the end of each level. Input: root = []\nOutput: []','Tree size is in the range [0, 6000]. Node values are between -100 and 100. Use constant extra space, assuming implicit stack space is not extra space.','https://leetcode.com/problems/Populating-Next-Right-Pointers-in-Each-Node-II/','Populating Next Right Pointers In Each Node Ii','Medium'),(77,'Given an array of distinct integers \'candidates\' and a target integer \'target\', return a list of all unique combinations where the chosen numbers sum to the target. Each number can be used unlimited times, and combinations must be unique based on frequency.','Find combinations summing to target','Input: candidates = [2,3,6,7], target = 7; Output: [[2,2,3],[7]]\nInput: candidates = [2,3,5], target = 8; Output: [[2,2,2,2],[2,3,3],[3,5]]\nInput: candidates = [2], target = 1; Output: []\nInput: candidates = [1], target = 1; Output: [[1]]\nInput: candidates = [1], target = 2; Output: [[1,1]]','1 <= candidates.length <= 30; 1 <= candidates[i] <= 200; All elements of \'candidates\' are distinct; 1 <= target <= 500; Maximum 150 unique combinations for any input.','https://leetcode.com/problems/Combination-Sum/','Combination Sum','Medium'),(78,'Given a sorted array of intervals, insert a new interval and merge overlapping intervals while maintaining sorted order.','Insert and merge new interval','[{\'input\': \'intervals = [[1,3],[6,9]], newInterval = [2,5]\', \'output\': \'[[1,5],[6,9]]\'}, {\'input\': \'intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]\', \'output\': \'[[1,2],[3,10],[12,16]]\'}, {\'input\': \'intervals = [], newInterval = [5,7]\', \'output\': \'[[5,7]]\'}, {\'input\': \'intervals = [[1,5]], newInterval = [2,3]\', \'output\': \'[[1,5]]\'}, {\'input\': \'intervals = [[1,5]], newInterval = [2,7]\', \'output\': \'[[1,7]]\'}]','[\'0 <= intervals.length <= 10^4\', \'intervals[i].length == 2\', \'0 <= start_i <= end_i <= 10^5\', \'intervals are sorted by start_i in ascending order.\', \'newInterval.length == 2\', \'0 <= start <= end <= 10^5\']','https://leetcode.com/problems/Insert-Interval/','Insert Interval','Medium'),(79,'Given an array of non-negative integers representing vertical lines at coordinates, find two lines that, along with the x-axis, form a container holding the maximum amount of water.','Find container with max water','Input: height = [1,8,6,2,5,4,8,3,7], Output: 49. Input: height = [1,1], Output: 1. Input: height = [4,3,2,1,4], Output: 16. Input: height = [1,2,1], Output: 2.','n == height.length, 2 <= n <= 105, 0 <= height[i] <= 104','https://leetcode.com/problems/Container-With-Most-Water/','Container With Most Water','None'),(80,'Given an array of positive integers \'nums\' and a positive integer \'target\', return the minimal length of a contiguous subarray whose sum is greater than or equal to \'target\'. If there is no such subarray, return 0.','Find minimal length subarray','Input: target = 7, nums = [2,3,1,2,4,3]\nOutput: 2\nExplanation: The subarray [4,3] has the minimal length.\n\nInput: target = 4, nums = [1,4,4]\nOutput: 1\n\nInput: target = 11, nums = [1,1,1,1,1,1,1,1]\nOutput: 0','1 <= target <= 10^9\n1 <= nums.length <= 10^5\n1 <= nums[i] <= 10^5','https://leetcode.com/problems/Minimum-Size-Subarray-Sum/','Minimum Size Subarray Sum','Medium'),(81,'Given an integer array \'coins\' representing denominations and an integer \'amount\', determine the minimum number of coins needed to make up that amount. Return -1 if it\'s impossible.','Find minimum coins for amount','Input: coins = [1,2,5], amount = 11; Output: 3. Explanation: 11 = 5 + 5 + 1','1 <= coins.length <= 12, 1 <= coins[i] <= 2^31 - 1, 0 <= amount <= 10^4','https://leetcode.com/problems/Coin-Change/','Coin Change','Medium'),(82,'Given an array of distinct integers, return all possible permutations. The answer can be in any order.','Find all array permutations','Example 1: Input: nums = [1,2,3] Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]] Example 2: Input: nums = [0,1] Output: [[0,1],[1,0]] Example 3: Input: nums = [1] Output: [[1]]','1 <= nums.length <= 6, -10 <= nums[i] <= 10, all integers in nums are unique.','https://leetcode.com/problems/Permutations/','Permutations','Medium'),(83,'Given two words, beginWord and endWord, and a dictionary wordList, find the number of words in the shortest transformation sequence from beginWord to endWord, or return 0 if no such sequence exists. Every adjacent pair of words in the sequence must differ by one letter, and all sequence words must be in wordList.','Find shortest word transformation length','Input: beginWord = \'hit\', endWord = \'cog\', wordList = [\'hot\', \'dot\', \'dog\', \'lot\', \'log\', \'cog\']; Output: 5. Input: beginWord = \'hit\', endWord = \'cog\', wordList = [\'hot\', \'dot\', \'dog\', \'lot\', \'log\']; Output: 0.','1 <= beginWord.length <= 10; endWord.length == beginWord.length; 1 <= wordList.length <= 5000; wordList[i].length == beginWord.length; beginWord, endWord, and wordList[i] consist of lowercase English letters; beginWord != endWord; all words in wordList are unique.','https://leetcode.com/problems/Word-Ladder/','Word Ladder','Hard'),(84,'Given n steps, determine the number of distinct ways to climb to the top where each step is either 1 or 2 steps.','Find ways to climb stairs','Input: n = 2, Output: 2, Explanation: [1 step + 1 step, 2 steps]; Input: n = 3, Output: 3, Explanation: [1+1+1, 1+2, 2+1]','1 <= n <= 45','https://leetcode.com/problems/Climbing-Stairs/','Climbing Stairs','Easy'),(85,'Given an integer n, calculate the number of distinct solutions to the n-queens puzzle where no two queens attack each other on an n x n chessboard.','Count solutions to n-queens puzzle','Example 1: Input: n = 4, Output: 2. Example 2: Input: n = 1, Output: 1.','1 <= n <= 9','https://leetcode.com/problems/N-Queens-II/','N-Queens Ii','Hard'),(86,'Given a string s and an array of strings words, find all starting indices of substrings in s that are a concatenation of each word in words exactly once and without intervening characters.','Find substring indices with words','Input: s = \"barfoothefoobarman\", words = [\"foo\",\"bar\"] Output: [0,9]; Input: s = \"wordgoodgoodgoodbestword\", words = [\"word\",\"good\",\"best\",\"word\"] Output: []; Input: s = \"barfoofoobarthefoobarman\", words = [\"bar\",\"foo\",\"the\"] Output: [6,9,12]','1 <= s.length <= 10^4; s consists of lower-case English letters; 1 <= words.length <= 5000; 1 <= words[i].length <= 30; words[i] consists of lower-case English letters.','https://leetcode.com/problems/Substring-with-Concatenation-of-All-Words/','Substring With Concatenation Of All Words','Hard'),(87,'Determine if an integer array contains two distinct indices i and j such that nums[i] == nums[j] and abs(i - j) <= k.','Check nearby duplicate indices','Input: nums = [1,2,3,1], k = 3; Output: true. Input: nums = [1,0,1,1], k = 1; Output: true. Input: nums = [1,2,3,1,2,3], k = 2; Output: false.','1 <= nums.length <= 10^5; -10^9 <= nums[i] <= 10^9; 0 <= k <= 10^5','https://leetcode.com/problems/Contains-Duplicate-II/','Contains Duplicate Ii','Easy'),(88,'Given the root of a binary tree, return its maximum depth, defined as the number of nodes along the longest path from the root to the farthest leaf node.','Find maximum depth of binary tree','Input: root = [3,9,20,null,null,15,7]; Output: 3\nInput: root = [1,null,2]; Output: 2\nInput: root = []; Output: 0\nInput: root = [0]; Output: 1','The number of nodes in the tree is in the range [0, 10^4]. Node values are in the range [-100, 100].','https://leetcode.com/problems/Maximum-Depth-of-Binary-Tree/','Maximum Depth Of Binary Tree','Easy'),(89,'Given two strings s and t, determine if t is an anagram of s, returning true if they are and false otherwise.','Check if strings are anagrams','Example 1: Input: s = \'anagram\', t = \'nagaram\' Output: true Example 2: Input: s = \'rat\', t = \'car\' Output: false','1 <= s.length, t.length <= 5 * 10^4. Both strings consist of lowercase English letters.','https://leetcode.com/problems/Valid-Anagram/','Valid Anagram','Easy'),(90,'Given a triangle array, compute the minimum path sum from the top to the bottom. At each step, you can move to adjacent numbers in the row below, either staying at the same index or moving to the next index.','Find minimum path sum in triangle','Input: triangle = [[2],[3,4],[6,5,7],[4,1,8,3]] Output: 11; Input: triangle = [[-10]] Output: -10','1 <= triangle.length <= 200; triangle[0].length == 1; triangle[i].length == triangle[i-1].length + 1; -104 <= triangle[i][j] <= 104','https://leetcode.com/problems/Triangle/','Triangle','Medium'),(91,'Given an elevation map as an array, compute the amount of water trapped after raining.','Calculate trapped rainwater volume','Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]; Output: 6. \nInput: height = [4,2,0,3,2,5]; Output: 9.','1 <= n <= 2 * 10^4, 0 <= height[i] <= 10^5, n == height.length.','https://leetcode.com/problems/Trapping-Rain-Water/','Trapping Rain Water','Hard'),(92,'Given the root of a binary tree, invert the tree and return its root.','Invert a binary tree','Example 1: Input: root = [4,2,7,1,3,6,9] Output: [4,7,2,9,6,3,1]\nExample 2: Input: root = [2,1,3] Output: [2,3,1]\nExample 3: Input: root = [] Output: []','The number of nodes in the tree is in the range [0, 100]. Node.val values are in the range [-100, 100].','https://leetcode.com/problems/Invert-Binary-Tree/','Invert Binary Tree','Easy'),(93,'Modify an m x n matrix in place such that for each element equal to 0, its entire row and column are set to 0.','Set matrix rows/columns to zeros','Input: matrix = [[1,1,1],[1,0,1],[1,1,1]] Output: [[1,0,1],[0,0,0],[1,0,1]]; Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]] Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]','1 <= m, n <= 200; -2^31 <= matrix[i][j] <= 2^31 - 1','https://leetcode.com/problems/Set-Matrix-Zeroes/','Set Matrix Zeroes','Medium'),(94,'Given two integer arrays preorder and inorder, construct and return the binary tree represented by these traversals.','Construct binary tree from traversals','Input: preorder = [3,9,20,15,7], inorder = [9,3,15,20,7]; Output: [3,9,20,null,null,15,7]. Input: preorder = [-1], inorder = [-1]; Output: [-1]','1 <= preorder.length <= 3000, inorder.length == preorder.length, -3000 <= preorder[i], inorder[i] <= 3000. Both arrays consist of unique values. Each value in inorder also appears in preorder. preorder and inorder are guaranteed to represent valid traversals of the same tree.','https://leetcode.com/problems/Construct-Binary-Tree-from-Preorder-and-Inorder-Traversal/','Construct Binary Tree From Preorder And Inorder Traversal','Medium'),(95,'Given two integers n and k, return all possible combinations of k numbers out of the range [1, n] in any order.','Generate combinations from range','Input: n = 4, k = 2\nOutput: [[2,4], [3,4], [2,3], [1,2], [1,3], [1,4]]\nInput: n = 1, k = 1\nOutput: [[1]]','1 <= n <= 20\n1 <= k <= n','https://leetcode.com/problems/Combinations/','Combinations','Medium'),(96,'Find the minimum number of operations (insert, delete, or replace) required to transform word1 into word2.','Min operations to convert strings','Input: word1 = \'horse\', word2 = \'ros\' Output: 3 Explanation: horse -> rorse -> rose -> ros. Input: word1 = \'intention\', word2 = \'execution\' Output: 5 Explanation: intention -> inention -> enention -> exention -> exection -> execution.','0 <= word1.length, word2.length <= 500. word1 and word2 consist of lowercase English letters.','https://leetcode.com/problems/Edit-Distance/','Edit Distance','Hard'),(97,'Given an array of tokens representing a valid Reverse Polish Notation (RPN) expression, evaluate its value. Valid operators are \'+\', \'-\', \'*\', and \'/\', where division follows truncation toward zero.','Evaluate arithmetic in RPN','Input: tokens = [\"2\",\"1\",\"+\",\"3\",\"*\"] Output: 9 Explanation: ((2 + 1) * 3) = 9. Input: tokens = [\"4\",\"13\",\"5\",\"/\",\"+\"] Output: 6 Explanation: (4 + (13 / 5)) = 6.','1 <= tokens.length <= 10^4. tokens[i] is either an operator (\'+\', \'-\', \'*\', \'/\') or an integer in the range [-200, 200]. Division by zero is not possible.','https://leetcode.com/problems/Evaluate-Reverse-Polish-Notation/','Evaluate Reverse Polish Notation','Medium'),(98,'Given an array of digits representing a large integer, increment the integer by one and return the resulting digit array.','Increment array-represented integer','Input: digits = [1,2,3] Output: [1,2,4]. Input: digits = [4,3,2,1] Output: [4,3,2,2]. Input: digits = [9] Output: [1,0].','1 <= digits.length <= 100, 0 <= digits[i] <= 9, no leading zeros in digits.','https://leetcode.com/problems/Plus-One/','Plus One','Easy'),(99,'Given arrays gas and cost, determine if it\'s possible to complete a circular journey starting at one gas station. If a solution exists, return the index of the starting station; otherwise, return -1.','Find starting gas station index','Input: gas = [1,2,3,4,5], cost = [3,4,5,1,2] Output: 3. Input: gas = [2,3,4], cost = [3,4,3] Output: -1.','1 <= n <= 104. 0 <= gas[i], cost[i] <= 104. gas.length == cost.length == n.','https://leetcode.com/problems/Gas-Station/','Gas Station','Medium'),(100,'Given a sorted and rotated array of unique elements, return the minimum element in O(log n) time.','Find minimum in rotated array','Input: nums = [3,4,5,1,2], Output: 1; Input: nums = [4,5,6,7,0,1,2], Output: 0; Input: nums = [11,13,15,17], Output: 11','1 <= n <= 5000; -5000 <= nums[i] <= 5000; All integers are unique; Array is sorted and rotated 1 to n times.','https://leetcode.com/problems/Find-Minimum-in-Rotated-Sorted-Array/','Find Minimum In Rotated Sorted Array','Medium'),(101,'Given an integer array nums and an integer k, return the kth largest element in the array in sorted order (not the kth distinct element).','Find kth largest element','Input: nums = [3,2,1,5,6,4], k = 2; Output: 5. Input: nums = [3,2,3,1,2,4,5,5,6], k = 4; Output: 4.','1 <= k <= nums.length <= 10^4; -10^4 <= nums[i] <= 10^4.','https://leetcode.com/problems/Kth-Largest-Element-in-an-Array/','Kth Largest Element In An Array','Medium'),(102,'Determine if a string follows a given pattern with a bijection between pattern characters and words in the string.','Check string follows pattern','Example 1: Input: pattern = \"abba\", s = \"dog cat cat dog\"; Output: true\nExample 2: Input: pattern = \"abba\", s = \"dog cat cat fish\"; Output: false\nExample 3: Input: pattern = \"aaaa\", s = \"dog cat cat dog\"; Output: false\nExample 4: Input: pattern = \"abba\", s = \"dog dog dog dog\"; Output: false','1 <= pattern.length <= 300, pattern contains only lower-case English letters. 1 <= s.length <= 3000, s contains only lower-case English letters and spaces. No leading or trailing spaces in s. Words in s are separated by a single space.','https://leetcode.com/problems/Word-Pattern/','Word Pattern','Easy'),(103,'Given an integer array nums, find a peak element that is strictly greater than its neighbors and return its index. If the array contains multiple peaks, return the index of any of the peaks. Ensure the algorithm runs in O(log n) time.','Find index of peak element','Input: nums = [1,2,3,1] Output: 2 (Explanation: 3 is a peak element at index 2). Input: nums = [1,2,1,3,5,6,4] Output: 5 (Explanation: Function can return either index 1 for peak 2 or index 5 for peak 6).','1 <= nums.length <= 1000, -2^31 <= nums[i] <= 2^31-1, nums[i] != nums[i+1] for all valid i. Treat nums[-1] and nums[n] as -∞.','https://leetcode.com/problems/Find-Peak-Element/','Find Peak Element','Medium'),(104,'Design an efficient algorithm to search for a target in a given m x n matrix where rows are sorted left-to-right and the first integer of each row is greater than the last integer of the previous row.','Search value in sorted matrix','Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3; Output: true\nInput: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13; Output: false','m == matrix.length; n == matrix[i].length; 1 <= m, n <= 100; -10^4 <= matrix[i][j], target <= 10^4','https://leetcode.com/problems/Search-a-2D-Matrix/','Search A 2D Matrix','Medium'),(105,'Given a string of digits from 2-9, return all possible letter combinations based on telephone button mappings.','Generate letter combinations for digits','Example 1: Input: digits = \'23\', Output: [\'ad\',\'ae\',\'af\',\'bd\',\'be\',\'bf\',\'cd\',\'ce\',\'cf\']. Example 2: Input: digits = \'\', Output: []. Example 3: Input: digits = \'2\', Output: [\'a\',\'b\',\'c\'].','0 <= digits.length <= 4. Each digit must be in the range [\'2\', \'9\'].','https://leetcode.com/problems/Letter-Combinations-of-a-Phone-Number/','Letter Combinations Of A Phone Number','Medium'),(106,'Given an m x n binary matrix filled with \'0\'s and \'1\'s, find the largest square containing only \'1\'s and return its area.','Find largest square area in matrix','Example 1: Input: matrix = [[\"1\",\"0\",\"1\",\"0\",\"0\"],[\"1\",\"0\",\"1\",\"1\",\"1\"],[\"1\",\"1\",\"1\",\"1\",\"1\"],[\"1\",\"0\",\"0\",\"1\",\"0\"]] Output: 4\nExample 2: Input: matrix = [[\"0\",\"1\"],[\"1\",\"0\"]] Output: 1\nExample 3: Input: matrix = [[\"0\"]] Output: 0','1 <= m, n <= 300. matrix[i][j] is \'0\' or \'1\'.','https://leetcode.com/problems/Maximal-Square/','Maximal Square','Medium'),(107,'Given an n x n 2D matrix, rotate it 90 degrees clockwise in-place without allocating another matrix.','Rotate matrix 90 degrees','Input: matrix = [[1,2,3],[4,5,6],[7,8,9]] Output: [[7,4,1],[8,5,2],[9,6,3]]; Input: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]] Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]','matrix.length == n, matrix[i].length == n, 1 <= n <= 20, -1000 <= matrix[i][j] <= 1000','https://leetcode.com/problems/Rotate-Image/','Rotate Image','Medium'),(108,'Return the level order traversal of a binary tree\'s nodes\' values, from left to right by each level.','Binary tree level order traversal','Input: root = [3,9,20,null,null,15,7]\nOutput: [[3],[9,20],[15,7]]\nInput: root = [1]\nOutput: [[1]]\nInput: root = []\nOutput: []','The number of nodes in the tree is in the range [0, 2000]. Node values are in the range [-1000, 1000].','https://leetcode.com/problems/Binary-Tree-Level-Order-Traversal/','Binary Tree Level Order Traversal','Medium'),(109,'Given the head of a linked list, remove the nth node from the end of the list and return its head.','Remove nth node from end','Input: head = [1,2,3,4,5], n = 2; Output: [1,2,3,5]. Input: head = [1], n = 1; Output: []. Input: head = [1,2], n = 1; Output: [1].','1 <= sz <= 30, 0 <= Node.val <= 100, 1 <= n <= sz','https://leetcode.com/problems/Remove-Nth-Node-From-End-of-List/','Remove Nth Node From End Of List','Medium'),(110,'Given a 32-bit unsigned integer, reverse its binary representation and return the resulting integer.','Reverse bits of 32-bit integer','Input: n = 00000010100101000001111010011100\nOutput: 964176192 (00111001011110000010100101000000)\nInput: n = 11111111111111111111111111111101\nOutput: 3221225471 (10111111111111111111111111111111)','Input is a binary string of length 32.','https://leetcode.com/problems/Reverse-Bits/','Reverse Bits','Easy'),(111,'Given an array of stock prices, find the maximum profit achievable by buying and selling the stock as many times as desired (with at most one share held at any time).','Find maximum stock trading profit','Input: prices = [7,1,5,3,6,4] Output: 7. Buy on day 2 (1) and sell on day 3 (5) for profit 4. Then buy on day 4 (3) and sell on day 5 (6) for profit 3. Total = 4 + 3 = 7.','1 <= prices.length <= 3000, 0 <= prices[i] <= 10000','https://leetcode.com/problems/Best-Time-to-Buy-and-Sell-Stock-II/','Best Time To Buy And Sell Stock Ii','Medium'),(112,'Write a function to generate all combinations of well-formed parentheses for a given number of pairs n.','Generate well-formed parentheses combinations','Input: n = 3, Output: [\'((()))\', \'(()())\', \'(())()\', \'()(())\', \'()()()\']\nInput: n = 1, Output: [\'()\']','1 <= n <= 8','https://leetcode.com/problems/Generate-Parentheses/','Generate Parentheses','Medium'),(113,'Convert a sorted integer array into a height-balanced binary search tree where the depth of subtrees of every node differ by at most one.','Convert sorted array to BST','Input: nums = [-10,-3,0,5,9] Output: [0,-3,9,-10,null,5]; Input: nums = [1,3] Output: [3,1]','1 <= nums.length <= 10^4, -10^4 <= nums[i] <= 10^4, nums is sorted in strictly increasing order.','https://leetcode.com/problems/Convert-Sorted-Array-to-Binary-Search-Tree/','Convert Sorted Array To Binary Search Tree','Easy'),(114,'Determine if two strings s and t are isomorphic, where characters in s can be replaced to get t while preserving the order and ensuring no two characters map to the same character.','Check if two strings are isomorphic','Input: s = \'egg\', t = \'add\' Output: true; Input: s = \'foo\', t = \'bar\' Output: false; Input: s = \'paper\', t = \'title\' Output: true','1 <= s.length <= 5000, t.length == s.length; s and t consist of valid ASCII characters.','https://leetcode.com/problems/Isomorphic-Strings/','Isomorphic Strings','Easy'),(115,'Given an array \'prices\', where \'prices[i]\' is the stock price on day i, find the maximum profit from buying and selling once, ensuring the buy occurs before the sell. Return 0 if no profit is possible.','Maximize stock trading profit','Input: prices = [7,1,5,3,6,4] Output: 5 (Buy on day 2 at price 1 and sell on day 5 at price 6). Input: prices = [7,6,4,3,1] Output: 0 (No profit possible).','1 <= prices.length <= 10^5, 0 <= prices[i] <= 10^4','https://leetcode.com/problems/Best-Time-to-Buy-and-Sell-Stock/','Best Time To Buy And Sell Stock','Easy'),(116,'Implement a basic calculator to evaluate a valid expression string without using built-in functions like eval().','Evaluate string arithmetic expression','Input: s = \"1 + 1\" -> Output: 2\nInput: s = \" 2-1 + 2 \" -> Output: 3\nInput: s = \"(1+(4+5+2)-3)+(6+8)\" -> Output: 23','1 <= s.length <= 3 * 10^5. s consists of digits, \'+\', \'-\', \'(\', \')\', and spaces. \'+\' is not unary. \'-\' may be unary inside parentheses. No consecutive operators. Result fits in signed 32-bit integer.','https://leetcode.com/problems/Basic-Calculator/','Basic Calculator','Hard'),(117,'Given an m x n grid of non-negative numbers, find the path from top-left to bottom-right that minimizes the sum of all numbers along the path. You can only move down or right at any point in time.','Find minimum path sum in grid','Input: grid = [[1,3,1],[1,5,1],[4,2,1]] Output: 7. Explanation: Path 1 → 3 → 1 → 1 → 1 minimizes the sum. Input: grid = [[1,2,3],[4,5,6]] Output: 12.','1 <= m, n <= 200, 0 <= grid[i][j] <= 100, m == grid.length, n == grid[i].length','https://leetcode.com/problems/Minimum-Path-Sum/','Minimum Path Sum','Medium'),(118,'Design and implement a Trie class with insert, search, and startsWith functionalities.','Implement a Trie data structure','Input: [\"Trie\", \"insert\", \"search\", \"search\", \"startsWith\", \"insert\", \"search\"], [[], [\"apple\"], [\"apple\"], [\"app\"], [\"app\"], [\"app\"], [\"app\"]] Output: [null, null, true, false, true, null, true] Explanation: Trie trie = new Trie(); trie.insert(\"apple\"); trie.search(\"apple\"); // True trie.search(\"app\"); // False trie.startsWith(\"app\"); // True trie.insert(\"app\"); trie.search(\"app\"); // True','1 <= word.length, prefix.length <= 2000; word and prefix consist only of lowercase English letters; at most 30,000 calls to insert, search, and startsWith methods combined.','https://leetcode.com/problems/Implement-Trie-(Prefix-Tree)/','Implement Trie (Prefix Tree)','Medium'),(119,'Given a non-empty array of integers where every element appears twice except for one, find the single element that appears once. Implement a solution with linear runtime complexity and constant space usage.','Find single unique element','Input: nums = [2,2,1] Output: 1; Input: nums = [4,1,2,1,2] Output: 4; Input: nums = [1] Output: 1','1 <= nums.length <= 30000, -30000 <= nums[i] <= 30000, each element appears twice except for one element.','https://leetcode.com/problems/Single-Number/','Single Number','Easy'),(120,'Implement a function pow(x, n) to calculate x raised to the power n.','Calculate x raised to power n','Example 1: Input: x=2.00000, n=10 Output: 1024.00000\nExample 2: Input: x=2.10000, n=3 Output: 9.26100\nExample 3: Input: x=2.00000, n=-2 Output: 0.25000','-100.0 < x < 100.0, -2^31 <= n <= 2^31 - 1, -10^4 <= x^n <= 10^4','https://leetcode.com/problems/Pow(x,-n)/','Pow(X, N)','Medium'),(121,'Given two integer arrays \'inorder\' and \'postorder\', representing the inorder and postorder traversals of a binary tree respectively, construct and return the binary tree.','Reconstruct binary tree from traversals','Input: inorder = [9,3,15,20,7], postorder = [9,15,7,20,3] -> Output: [3,9,20,null,null,15,7]; Input: inorder = [-1], postorder = [-1] -> Output: [-1]','1 <= inorder.length <= 3000; postorder.length == inorder.length; -3000 <= inorder[i], postorder[i] <= 3000; inorder and postorder consist of unique values; All values in postorder appear in inorder; The given traversals are valid representations of the binary tree.','https://leetcode.com/problems/Construct-Binary-Tree-from-Inorder-and-Postorder-Traversal/','Construct Binary Tree From Inorder And Postorder Traversal','Medium'),(122,'Determine if a string is a palindrome, considering only alphanumeric characters and ignoring case.','Check if string is palindrome','Input: s = \'A man, a plan, a canal: Panama\'\nOutput: true\nExplanation: \'amanaplanacanalpanama\' is a palindrome.\nInput: s = \'race a car\'\nOutput: false\nExplanation: \'raceacar\' is not a palindrome.','1 <= s.length <= 200000; s consists only of printable ASCII characters.','https://leetcode.com/problems/Valid-Palindrome/','Valid Palindrome','Easy'),(123,'Given an array of strings, group the anagrams together. An anagram is formed by rearranging the letters of a word using all the original letters exactly once. Return the answer in any order.','Group strings by anagrams','Input: strs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"] Output: [[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]. Input: strs = [\"\"] Output: [[\"\"]]. Input: strs = [\"a\"] Output: [[\"a\"]].','1 <= strs.length <= 10^4, 0 <= strs[i].length <= 100, strs[i] consists of lowercase English letters.','https://leetcode.com/problems/Group-Anagrams/','Group Anagrams','Medium'),(124,'Given an integer, convert it to its Roman numeral representation.','Convert integer to Roman numeral','Input: num = 3, Output: \'III\'; Input: num = 4, Output: \'IV\'; Input: num = 9, Output: \'IX\'; Input: num = 58, Output: \'LVIII\'; Input: num = 1994, Output: \'MCMXCIV\'','1 <= num <= 3999','https://leetcode.com/problems/Integer-to-Roman/','Integer To Roman','Medium'),(125,'Write a function that takes two binary strings a and b, and returns their sum as a binary string.','Sum two binary strings','Input: a = \"11\", b = \"1\"; Output: \"100\". Input: a = \"1010\", b = \"1011\"; Output: \"10101\".','1 <= a.length, b.length <= 104. a and b consist only of \'0\' or \'1\'. Strings do not have leading zeros except for zero itself.','https://leetcode.com/problems/Add-Binary/','Add Binary','Easy'),(126,'Given an n x n Boustrophedon integer matrix representing a board with snakes and ladders, determine the least number of moves required to reach the last square, or return -1 if it is not possible.','Find minimum moves in board game','Input: board = [[-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1],[-1,35,-1,-1,13,-1],[-1,-1,-1,-1,-1,-1],[-1,15,-1,-1,-1,-1]]\nOutput: 4\nInput: board = [[-1,-1],[-1,3]]\nOutput: 1','n == board.length == board[i].length; 2 <= n <= 20; board[i][j] is -1 or in range [1, n^2]; Squares 1 and n^2 do not have ladders or snakes.','https://leetcode.com/problems/Snakes-and-Ladders/','Snakes And Ladders','Medium'),(127,'Given a m x n matrix, return all elements of the matrix in spiral order.','Return matrix elements in spiral order','Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]; Output: [1,2,3,6,9,8,7,4,5]. Input: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]; Output: [1,2,3,4,8,12,11,10,9,5,6,7]','m == matrix.length, n == matrix[i].length, 1 <= m, n <= 10, -100 <= matrix[i][j] <= 100','https://leetcode.com/problems/Spiral-Matrix/','Spiral Matrix','Medium'),(128,'Given equations and values, determine the results of queries on division relationships between variables. Return -1.0 if the result cannot be determined.','Evaluate division based on equations','Input: equations = [[\"a\",\"b\"],[\"b\",\"c\"]], values = [2.0,3.0], queries = [[\"a\",\"c\"],[\"b\",\"a\"],[\"a\",\"e\"],[\"a\",\"a\"],[\"x\",\"x\"]]\nOutput: [6.00000,0.50000,-1.00000,1.00000,-1.00000]','1 <= equations.length <= 20, equations[i].length == 2, 1 <= Ai.length, Bi.length <= 5, 0.0 < values[i] <= 20.0, 1 <= queries.length <= 20, queries[i].length == 2, 1 <= Cj.length, Dj.length <= 5. Variables are lowercase English letters and digits.','https://leetcode.com/problems/Evaluate-Division/','Evaluate Division','Medium'),(129,'Write an algorithm to check if a number n is a happy number by iterating the sum of the squares of its digits until reaching 1 or entering an endless cycle.','Determine if a number is happy','Input: n = 19, Output: true (Explanation: 1^2 + 9^2 = 82 -> 8^2 + 2^2 = 68 -> 6^2 + 8^2 = 100 -> 1^2 + 0^2 + 0^2 = 1); Input: n = 2, Output: false.','1 <= n <= 2^31 - 1','https://leetcode.com/problems/Happy-Number/','Happy Number','Easy'),(130,'Transform a binary tree into a linked list where the right pointer represents the next node and left is always null, following pre-order traversal.','Flatten binary tree to linked list','Input: root = [1,2,5,3,4,null,6]; Output: [1,null,2,null,3,null,4,null,5,null,6]\nInput: root = []; Output: []\nInput: root = [0]; Output: [0]','The number of nodes in the tree is in the range [0, 2000]. Node values are in the range [-100, 100].','https://leetcode.com/problems/Flatten-Binary-Tree-to-Linked-List/','Flatten Binary Tree To Linked List','Medium'),(131,'Given the head of a linked list, rotate it to the right by k places.','Rotate linked list right k steps','Input: head = [1,2,3,4,5], k = 2; Output: [4,5,1,2,3]. Input: head = [0,1,2], k = 4; Output: [2,0,1].','The number of nodes in the list is in the range [0, 500]. Node values are in the range [-100, 100]. k is in the range [0, 2 * 10^9].','https://leetcode.com/problems/Rotate-List/','Rotate List','Medium'),(132,'Given balloon diameters as start and end x-coordinates, determine the minimum number of vertical arrows required to burst all balloons.','Minimum arrows to burst balloons','Input: points = [[10,16],[2,8],[1,6],[7,12]], Output: 2; Input: points = [[1,2],[3,4],[5,6],[7,8]], Output: 4; Input: points = [[1,2],[2,3],[3,4],[4,5]], Output: 2','1 <= points.length <= 10^5, points[i].length == 2, -2^31 <= x_start < x_end <= 2^31 - 1','https://leetcode.com/problems/Minimum-Number-of-Arrows-to-Burst-Balloons/','Minimum Number Of Arrows To Burst Balloons','Medium'),(133,'Determine if there is a root-to-leaf path in a binary tree where the sum of node values equals the given targetSum.','Check binary tree path sum','Input: root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22; Output: true. Input: root = [1,2,3], targetSum = 5; Output: false. Input: root = [1,2], targetSum = 0; Output: false.','The number of nodes in the tree is in the range [0, 5000]. Node values are between -1000 and 1000. targetSum is between -1000 and 1000.','https://leetcode.com/problems/Path-Sum/','Path Sum','Easy'),(134,'Given the head of a linked list, return the list sorted in ascending order. Can you achieve O(n logn) time and O(1) space complexity?','Sort linked list in ascending order','Example 1:\nInput: head = [4,2,1,3]\nOutput: [1,2,3,4]\nExample 2:\nInput: head = [-1,5,3,4,0]\nOutput: [-1,0,3,4,5]\nExample 3:\nInput: head = []\nOutput: []','The number of nodes in the list is in the range [0, 50000]. Node values range from -100000 to 100000.','https://leetcode.com/problems/Sort-List/','Sort List','Medium'),(135,'Determine if ransomNote can be constructed from magazine using each letter only once.','Check ransomNote from magazine','Input: ransomNote = \'aa\', magazine = \'aab\'; Output: true. Input: ransomNote = \'aa\', magazine = \'ab\'; Output: false.','1 <= ransomNote.length, magazine.length <= 105. Both consist of lowercase English letters.','https://leetcode.com/problems/Ransom-Note/','Ransom Note','Easy'),(136,'Given the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers. Return the modified sorted linked list.','Remove duplicates from sorted list','Input: head = [1,2,3,3,4,4,5]; Output: [1,2,5]. Input: head = [1,1,1,2,3]; Output: [2,3].','The number of nodes in the list is in the range [0, 300]. Node values range from -100 to 100. The linked list is guaranteed to be sorted in ascending order.','https://leetcode.com/problems/Remove-Duplicates-from-Sorted-List-II/','Remove Duplicates From Sorted List Ii','Medium');
/*!40000 ALTER TABLE `questions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `users` (
  `id` int NOT NULL AUTO_INCREMENT,
  `email` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `questions_completed` json DEFAULT NULL,
  `past_feedback` text,
  PRIMARY KEY (`id`),
  UNIQUE KEY `email` (`email`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (2,'test@example.com','$2b$12$AZvaGC5YOBs6nAJbZu2VWuR2hDsXbIzKazoQBJF7a48gFUXo79E/i','Test User','2025-03-18 06:53:19','[]','{}'),(3,'test1@gmail.com','$2b$12$ts7Du8DjbC5veZclR.2i3egdYKj34tdvwAjt3o6BOqozIfGUkHA2a','test1','2025-03-18 06:56:17','[4]','{\"4\": {\"final_evaluation\": {\"communication\": \"Hire\", \"problem_solving\": \"Hire\", \"technical_competency\": \"Hire\", \"examples_of_what_went_well\": \"The user demonstrated a clear understanding of the problem\'s requirements and articulated their thought process effectively.\"}, \"detailed_feedback\": {\"communication\": \"The user explained their stack-based approach concisely and showed confidence in their solution. Minor improvements could be made in describing edge cases explicitly or handling non-bracket characters.\", \"problem_solving\": \"The approach using a stack was appropriate and aligned with the problem requirements. The user demonstrated strong problem-solving skills by crafting a solution that handled matching and order of brackets accurately.\", \"technical_competency\": \"The code is well-structured, efficient, and uses clear variable names. The logic correctly implements the bracket matching using a stack, which is the optimal approach for this problem.\", \"examples_of_what_went_well\": \"Using a dictionary for bracket mapping and handling opening and closing brackets with clear conditional checks demonstrates technical aptitude. The code is readable and easy to follow.\"}}}'),(4,'test2@gmail.com','$2b$12$gTDh4I.6fmY1AaLj3/OMbettK56JyDadfxrpXhk.de.D6B3p2eJdu','test2','2025-03-18 07:59:00','[]','{}'),(5,'test3@gmail.com','$2b$12$lUr7/hKXgEnFHY40YxZM2uIuOx.aoZgJDoR26lFpV7MfN7Kc4scje','test3','2025-03-21 10:22:09','[4, 9, 7, 6, 15]','{\"4\": {\"final_evaluation\": {\"communication\": \"Hire\", \"problem_solving\": \"Hire\", \"technical_competency\": \"Hire\", \"examples_of_what_went_well\": \"The user demonstrated a clear ability to enhance their code based on feedback, adapting the function to ignore non-bracket characters without losing functionality.\"}, \"detailed_feedback\": {\"communication\": \"The user communicated well, providing explanations for their approach and implementation, and was able to clarify and improve their code post-feedback.\", \"problem_solving\": \"The solution utilized an efficient stack-based approach that correctly handled nested bracket matching and responded well to feedback, incorporating additional functionality seamlessly.\", \"technical_competency\": \"The user appropriately used Python data structures (stack, dictionary) and control flow to deliver a solution that is correct, readable, and adheres to good practices.\", \"examples_of_what_went_well\": \"They implemented the stack system correctly for bracket matching and efficiently extended functionality based on comments to handle non-bracket characters without breaking existing functionality.\"}}, \"9\": {\"final_evaluation\": {\"communication\": \"Hire\", \"problem_solving\": \"Hire\", \"technical_competency\": \"Hire\", \"examples_of_what_went_well\": \"Provided a correct, optimized solution using bitwise operations for the revised version of the function.\"}, \"detailed_feedback\": {\"communication\": \"The user clearly understood the feedback about handling integers and promptly revised their approach for the Hamming weight function. Explanation in the discussion was clear and to the point.\", \"problem_solving\": \"Initially suggested a string-based approach which was correct conceptually but not fit for the unsigned integer context. Adapted their solution efficiently after feedback using bitwise operations.\", \"technical_competency\": \"Demonstrated understanding of language features such as string methods and bitwise operators. Revised code showcased competency in solving technical problems accurately.\", \"examples_of_what_went_well\": \"Revised code is optimal for iterating over 32 bits. The use of bitwise AND and right shift operations demonstrates technical proficiency and problem-solving ability.\"}}, \"7\": {\"final_evaluation\": {\"communication\": \"No Hire\", \"problem_solving\": \"No Hire\", \"technical_competency\": \"No Hire\", \"examples_of_what_went_well\": \"None\"}, \"detailed_feedback\": {\"communication\": \"The user included an unprofessional comment (\'Obvi we just reverse the array k times \\ud83d\\ude44\') in the code, which is inappropriate and indicates a lack of clear and professional communication.\", \"problem_solving\": \"The solution proposed is excessively inefficient, as it would result in O(k * n) time complexity. This approach shows limited understanding of optimal problem-solving techniques for array manipulation.\", \"technical_competency\": \"The user opted for a suboptimal solution with high computational overhead and made no effort to explore algorithmic improvements such as mathematical modular arithmetic or array slicing, which are more appropriate for this problem.\", \"examples_of_what_went_well\": \"The user demonstrated basic knowledge of list manipulation in Python by utilizing methods like .insert() and .pop().\"}}, \"6\": {\"final_evaluation\": {\"communication\": \"Hire\", \"problem_solving\": \"Hire\", \"technical_competency\": \"Hire\", \"examples_of_what_went_well\": \"The user demonstrated clear reasoning in choosing to use a stack to manage directory navigation, a correct understanding of how file paths are constructed, and an ability to debug and fix the indentation issue swiftly.\"}, \"detailed_feedback\": {\"communication\": \"The user explained their approach effectively, clearly detailing the use of a stack for directory traversal and filtering. They actively engaged in discussions around improvements for their code.\", \"problem_solving\": \"Their approach to the problem was efficient and correct, dividing the path into components and systematically handling edge cases such as \'..\' and \'.\'.\", \"technical_competency\": \"The implemented function was technically sound, meeting the requirements for canonical path simplification. Indentation issues were quickly corrected after feedback.\", \"examples_of_what_went_well\": \"Using a stack to manage directory navigation, handling \'..\', \'.\', and empty parts effectively, and returning the canonical path correctly.\"}}, \"15\": {\"final_evaluation\": {\"communication\": \"Hire\", \"problem_solving\": \"Hire\", \"technical_competency\": \"Hire\", \"examples_of_what_went_well\": \"Explained the logic clearly during the summary phase and handled edge cases effectively in code.\"}, \"detailed_feedback\": {\"communication\": \"The user provided a thorough explanation of their thought process and approach. They structured their explanation logically, making it easy to follow, and appropriately addressed edge cases during discussion.\", \"problem_solving\": \"The solution demonstrated good problem-solving skills, iteratively revising the prefix until it matched all strings. The implementation accounted for potential edge cases, such as an empty list or prefix collapse.\", \"technical_competency\": \"The user wrote efficient code using key Python concepts like list indexing, string methods, and loops. Their solution was clean and leveraged Python\\u2019s capabilities well.\", \"examples_of_what_went_well\": \"Efficiently used string methods, maintained lowercase comparison for case-insensitivity, and preserved original casing in the output. Demonstrated clear understanding of problem scope and thoughtful handling of edge cases.\"}}}');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2025-03-24  9:42:20
