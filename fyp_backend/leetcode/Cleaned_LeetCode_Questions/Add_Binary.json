{
    "summary": "Sum two binary strings",
    "question": "Write a function that takes two binary strings a and b, and returns their sum as a binary string.",
    "example": "Input: a = \"11\", b = \"1\"; Output: \"100\". Input: a = \"1010\", b = \"1011\"; Output: \"10101\".",
    "constraint": "1 <= a.length, b.length <= 104. a and b consist only of '0' or '1'. Strings do not have leading zeros except for zero itself.",
    "followup": "",
    "title": "Add Binary",
    "leetcode_url": "https://leetcode.com/problems/Add-Binary/",
    "difficulty": "Easy",
    "starter_code": "\n    ```python\ndef addBinary(a: str, b: str) -> str:\n    result, carry, i, j = \"\", 0, len(a) - 1, len(b) - 1\n    while i >= 0 or j >= 0 or carry:\n        if i >= 0:\n            carry += int(a[i])\n            i -= 1\n        if j >= 0:\n            carry += int(b[j])\n            j -= 1\n        result = str(carry % 2) + result\n        carry //= 2\n    return result\n```\n    \n    The algorithm initializes an empty result binary string, carry, and two pointers i and j pointing to the last element of strings a and b respectively.\nIn each iteration:\n- If i is not out of bounds, add the corresponding binary number to the carry.\n- If j is not out of bounds, add the corresponding binary number to the carry.\n- Append the remainder of dividing carry by 2 to the result binary string (left side).\n- Update carry by dividing it by 2 (integer division).\n\nThis process continues until i and j pointers become out of bounds and there is no carry left.\n\nFinally, return the result binary string.\n    "
}