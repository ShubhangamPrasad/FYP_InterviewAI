{
    "summary": "Find max path sum in tree",
    "question": "Given the root of a binary tree, return the maximum path sum of any path where a path is defined as a sequence of connected nodes with each pair of adjacent nodes connected by an edge. Each node can appear in the path at most once, and the path does not need to pass through the root.",
    "example": "Input: root = [1,2,3] -> Output: 6 (Optimal path: 2 -> 1 -> 3)\nInput: root = [-10,9,20,null,null,15,7] -> Output: 42 (Optimal path: 15 -> 20 -> 7)",
    "constraint": "1 <= Number of nodes <= 30,000; Node values range from -1000 to 1000",
    "followup": "",
    "title": "Binary Tree Maximum Path Sum",
    "leetcode_url": "https://leetcode.com/problems/Binary-Tree-Maximum-Path-Sum/",
    "difficulty": "Hard"
}