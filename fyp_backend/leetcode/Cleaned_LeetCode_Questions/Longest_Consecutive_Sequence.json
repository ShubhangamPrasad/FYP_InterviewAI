{
    "summary": "Find longest consecutive sequence length",
    "question": "Given an unsorted array of integers, return the length of the longest consecutive elements sequence. Implement the solution in O(n) time complexity.",
    "example": "Input: nums = [100,4,200,1,3,2]; Output: 4 (Explanation: Longest sequence is [1, 2, 3, 4])\nInput: nums = [0,3,7,2,5,8,4,6,0,1]; Output: 9 (Explanation: Longest sequence is [0, 1, 2, 3, 4, 5, 6, 7, 8])",
    "constraint": "0 <= nums.length <= 10^5; -10^9 <= nums[i] <= 10^9",
    "followup": "",
    "title": "Longest Consecutive Sequence",
    "leetcode_url": "https://leetcode.com/problems/Longest-Consecutive-Sequence/",
    "difficulty": "Medium",
    "starter_code": "\n    ```python\ndef longest_consecutive(nums):\n    elements = set(nums)\n    longest_seq = 0\n\n    for num in nums:\n        if num - 1 not in elements:\n            current_num = num\n            current_seq = 1\n            \n            while current_num + 1 in elements:\n                current_num += 1\n                current_seq += 1\n\n            longest_seq = max(longest_seq, current_seq)\n    \n    return longest_seq\n```\n    \n    The algorithm first creates a set (or hash set) with the given array of integers called `elements`. The set will allow us to have a fast O(1) lookup on our next step.\nNow we iterate through the original array of numbers, and for each number, we check if `(number - 1)` is not in the `elements` set. If it's not in the set, it means we can start counting a new consecutive sequence.\nNext, we create two variables, `currentNum` and `currentSeq`, and initialize them with the current number and 1, respectively.\nWe then use a while loop to check if the next number (`currentNum + 1`) is in the `elements` set. If it is, we increment both `currentNum` and `currentSeq`. This process will continue, finding consecutive elements in the set, until no more consecutive elements are found.\nFinally, to get the length of the longest consecutive sequence, we update the `longestSeq` variable by choosing the maximum value between itself and `currentSeq`. This will keep track of the longest consecutive sequence found so far.\nThe process continues until all numbers in the original array have been checked, and at the end, `longestSeq` will store the answer - the length of the longest consecutive elements sequence.\n    "
}