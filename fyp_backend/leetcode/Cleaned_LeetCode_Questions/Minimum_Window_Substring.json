{
    "summary": "Find minimum window substring",
    "question": "Given two strings s and t, return the smallest substring in s that contains all characters of t, including duplicates. If no such substring exists, return an empty string.",
    "example": "Example 1: Input: s = \"ADOBECODEBANC\", t = \"ABC\", Output: \"BANC\". Example 2: Input: s = \"a\", t = \"a\", Output: \"a\". Example 3: Input: s = \"a\", t = \"aa\", Output: \"\".",
    "constraint": "1 <= s.length, t.length <= 10^5. s and t consist of uppercase and lowercase English letters.",
    "followup": "Could you find an algorithm that runs in O(m + n) time?",
    "title": "Minimum Window Substring",
    "leetcode_url": "https://leetcode.com/problems/Minimum-Window-Substring/",
    "difficulty": "Hard"
}