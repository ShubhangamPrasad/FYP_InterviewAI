{
    "summary": "Increment array-represented integer",
    "question": "Given an array of digits representing a large integer, increment the integer by one and return the resulting digit array.",
    "example": "Input: digits = [1,2,3] Output: [1,2,4]. Input: digits = [4,3,2,1] Output: [4,3,2,2]. Input: digits = [9] Output: [1,0].",
    "constraint": "1 <= digits.length <= 100, 0 <= digits[i] <= 9, no leading zeros in digits.",
    "followup": "",
    "title": "Plus One",
    "leetcode_url": "https://leetcode.com/problems/Plus-One/",
    "difficulty": "Easy",
    "starter_code": "\n    ```python\ndef plusOne(digits: List[int]) -> List[int]:\n    n = len(digits)\n\n    for i in range(n - 1, -1, -1):\n        if digits[i] < 9:\n            digits[i] += 1\n            return digits\n        digits[i] = 0\n\n    digits.insert(0, 1)\n    return digits\n```\n\n    \n    We start by iterating through the array from the least significant digit (rightmost) to the most significant digit (leftmost). In each iteration, we check whether the digit is less than 9. If the digit is less than 9, increment it and return the incremented array. If the digit is 9, we set it to 0 and continue the loop to the next most significant digit.\n\nAfter the loop, if we haven't found any digit less than 9, that means we have a number like 9999...9 which needs to be incremented to 10000...0. So we add a 1 at the beginning of the array (the most significant digit). Finally, we return the incremented array.\n    "
}