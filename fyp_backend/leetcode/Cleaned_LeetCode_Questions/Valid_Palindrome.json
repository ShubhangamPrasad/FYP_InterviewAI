{
    "summary": "Check if string is palindrome",
    "question": "Determine if a string is a palindrome, considering only alphanumeric characters and ignoring case.",
    "example": "Input: s = 'A man, a plan, a canal: Panama'\nOutput: true\nExplanation: 'amanaplanacanalpanama' is a palindrome.\nInput: s = 'race a car'\nOutput: false\nExplanation: 'raceacar' is not a palindrome.",
    "constraint": "1 <= s.length <= 200000; s consists only of printable ASCII characters.",
    "followup": "",
    "title": "Valid Palindrome",
    "leetcode_url": "https://leetcode.com/problems/Valid-Palindrome/",
    "difficulty": "Easy",
    "starter_code": "\n    ```python\ndef isPalindrome(s: str) -> bool:\n    cleaned = \"\".join(c.lower() for c in s if c.isalnum())\n    left, right = 0, len(cleaned) - 1\n    while left < right:\n        if cleaned[left] != cleaned[right]:\n            return False\n        left += 1\n        right -= 1\n    return True\n```\n    \n    1. Clean the given string by removing non-alphanumeric characters and converting uppercase letters to lowercase.\n2. Initialize two pointers: `left` pointing to the beginning of the cleaned string and `right` pointing to the end.\n3. Iterate through the cleaning string, comparing the characters at the `left` and `right` pointers. If they are not equal, return `false` as it's not a palindrome.\n4. If the loop completes, it means the input string is a palindrome, so return `true`.\n    "
}